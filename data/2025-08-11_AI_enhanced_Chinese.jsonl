{"id": "2508.05997", "pdf": "https://arxiv.org/pdf/2508.05997", "abs": "https://arxiv.org/abs/2508.05997", "authors": ["Aditi Kabra", "Jonathan Laurent", "Stefan Mitsch", "Andr\u00e9 Platzer"], "title": "Hybrid Game Control Envelope Synthesis", "categories": ["cs.PL", "cs.LO", "I.2.2; I.2.4"], "comment": null, "summary": "Control problems for embedded systems like cars and trains can be modeled by\ntwo-player hybrid games. Control envelopes, which are families of safe control\nsolutions, correspond to nondeterministic winning policies of hybrid games,\nwhere each deterministic specialization of the policy is a control solution.\nThis paper synthesizes nondeterministic winning policies for hybrid games that\nare as permissive as possible. It introduces subvalue maps, a compositional\nrepresentation of such policies that enables verification and synthesis along\nthe structure of the game. An inductive logical characterization in\ndifferential game logic (dGL) checks whether a subvalue map induces a sound\ncontrol envelope which always induces a winning play. A policy is said to win\nif it always achieves the desirable outcome when the player follows it, no\nmatter what actions the opponent plays. The maximal subvalue map, which allows\nthe most action options while still winning, is shown to exist and satisfy a\nlogical characterization. A family of algorithms for nondeterministic policy\nsynthesis can be obtained from the inductive subvalue map soundness\ncharacterization. An implementation of these findings is evaluated on examples\nthat use the expressivity of dGL to model a range of diverse control\nchallenges.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u5408\u6210\u6df7\u5408\u6e38\u620f\u4e2d\u975e\u786e\u5b9a\u6027\u83b7\u80dc\u7b56\u7565\u7684\u65b9\u6cd5\uff0c\u901a\u8fc7\u5b50\u503c\u6620\u5c04\u7684\u7ec4\u6210\u8868\u793a\u5b9e\u73b0\u7b56\u7565\u7684\u9a8c\u8bc1\u4e0e\u5408\u6210\uff0c\u5e76\u5728\u5fae\u5206\u535a\u5f08\u903b\u8f91\uff08dGL\uff09\u4e2d\u9a8c\u8bc1\u5176\u6b63\u786e\u6027\u3002", "motivation": "\u5d4c\u5165\u5f0f\u7cfb\u7edf\uff08\u5982\u6c7d\u8f66\u548c\u706b\u8f66\uff09\u7684\u63a7\u5236\u95ee\u9898\u53ef\u4ee5\u5efa\u6a21\u4e3a\u53cc\u4eba\u6df7\u5408\u6e38\u620f\uff0c\u9700\u8981\u5c3d\u53ef\u80fd\u5bbd\u677e\u7684\u5b89\u5168\u63a7\u5236\u89e3\u51b3\u65b9\u6848\u3002", "method": "\u5f15\u5165\u5b50\u503c\u6620\u5c04\u4f5c\u4e3a\u7b56\u7565\u7684\u7ec4\u6210\u8868\u793a\uff0c\u901a\u8fc7\u5fae\u5206\u535a\u5f08\u903b\u8f91\uff08dGL\uff09\u9a8c\u8bc1\u5176\u6b63\u786e\u6027\uff0c\u5e76\u8bc1\u660e\u6700\u5927\u5b50\u503c\u6620\u5c04\u7684\u5b58\u5728\u6027\u3002", "result": "\u63d0\u51fa\u4e86\u4e00\u7cfb\u5217\u975e\u786e\u5b9a\u6027\u7b56\u7565\u5408\u6210\u7b97\u6cd5\uff0c\u5e76\u901a\u8fc7\u5b9e\u9a8c\u9a8c\u8bc1\u4e86\u65b9\u6cd5\u7684\u6709\u6548\u6027\u3002", "conclusion": "\u5b50\u503c\u6620\u5c04\u548cdGL\u7684\u7ed3\u5408\u4e3a\u6df7\u5408\u6e38\u620f\u4e2d\u7684\u63a7\u5236\u95ee\u9898\u63d0\u4f9b\u4e86\u9ad8\u6548\u4e14\u53ef\u9a8c\u8bc1\u7684\u89e3\u51b3\u65b9\u6848\u3002"}}
